kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-order --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-promotion --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-promotion-uppercase --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-order-masked --partitions 1 --replication-factor 1
----------------------------------------------------

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-one --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-reward-one --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-storage-one --partitions 1 --replication-factor 1


----------------------------------------------------
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-two-plastic --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-two-nonplastic --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-reward-two --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-storage-two --partitions 1 --replication-factor 1

----------------------------------------------------
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-three-plastic --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-three-nonplastic --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-reward-three --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-storage-three --partitions 1 --replication-factor 1

----------------------------------------------------
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-four-plastic --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-four-nonplastic --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-reward-four --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-storage-four --partitions 1 --replication-factor 1


-----------------------------------------------
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-five-plastic --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-five-nonplastic --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-reward-five --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-storage-five --partitions 1 --replication-factor 1

-----------------------------------------------

-----------------------------------------------
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-six-plastic --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-pattern-six-nonplastic --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-reward-six --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-storage-six --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-fraud-six --partitions 1 --replication-factor 1


-----------------------------------------------

------------------------------------------------

-- After implementation of promotion producer and api check from console

kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic t-commodity-promotion


kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic t-commodity-order-masked


kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic t-commodity-pattern-one

kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic t-commodity-reward-one

kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic t-commodity-storage-one

kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic t-commodity-pattern-two-plastic

kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic t-commodity-pattern-two-nonplastic

kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic t-commodity-storage-two


kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic t-commodity-pattern-three-plastic

kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic t-commodity-reward-four

kafka-console-consumer.sh --bootstrap-server localhost:9092 --property print.key=true  --topic t-commodity-reward-four


kafka-console-consumer.sh --bootstrap-server localhost:9092 --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer  --topic t-commodity-fraud-six

---------------------------------------------------------------------------------
Merge Mobile and web stream 

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-customer-purchase-mobile --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-customer-purchase-web --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-customer-purchase-all --partitions 1 --replication-factor 1


kafka-console-consumer.sh --bootstrap-server localhost:9092 --property print.key=true  --topic t-commodity-customer-purchase-all


------------------------------------------------------------------------------------------------------------------
Customer Feedback good and bad


kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback --partitions 1 --replication-factor 1

***Scenario one Sending good feedback:-
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-one-good --partitions 1 --replication-factor 1

kafka-console-consumer.sh --bootstrap-server localhost:9092 --property print.key=true  --topic t-commodity-feedback-one-good

***Scenario two who own's the feedback(add location as key):-
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-two-good --partitions 1 --replication-factor 1

--from-beginning
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true  --topic t-commodity-feedback-two-good

***Scenario three good or bad feedback:-
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-three-good --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-three-bad --partitions 1 --replication-factor 1

kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true  --topic t-commodity-feedback-three-good

kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true  --topic t-commodity-feedback-three-bad

***Scenario four count of each instance (group using table):-
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-four-good --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-four-bad --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-four-good-count --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-four-bad-count --partitions 1 --replication-factor 1


kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true  --topic t-commodity-feedback-four-good
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true  --topic t-commodity-feedback-four-bad
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer  --topic t-commodity-feedback-four-good-count
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer  --topic t-commodity-feedback-four-bad-count

***Send and Continue:-
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-five-good --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-five-bad --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-five-good-count --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-five-bad-count --partitions 1 --replication-factor 1


kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true  --topic t-commodity-feedback-five-good
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true  --topic t-commodity-feedback-five-bad
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer  --topic t-commodity-feedback-five-good-count
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer  --topic t-commodity-feedback-five-bad-count


***Scenario six overall good or bad:-
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-six-good --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-six-bad --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-six-good-count --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-six-bad-count --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-six-good-count-word --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-six-bad-count-word --partitions 1 --replication-factor 1


kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true  --topic t-commodity-feedback-six-good
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true  --topic t-commodity-feedback-six-bad
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer  --topic t-commodity-feedback-six-good-count
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer  --topic t-commodity-feedback-six-bad-count
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer  --topic t-commodity-feedback-six-good-count-word
kafka-console-consumer.sh --bootstrap-server localhost:9092  --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer  --topic t-commodity-feedback-six-bad-count-word

-----------------------------------------------------
wishlist and cart 

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-customer-preference-shopping-cart --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-customer-preference-wishlist --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-customer-preference-all --partitions 1 --replication-factor 1


kafka-console-consumer.sh --bootstrap-server localhost:9092 --property print.key=true --topic t-commodity-customer-preference-all

----------------------------------------

flash sale vote


kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-flashsale-vote --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-flashsale-vote-user-item --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-flashsale-vote-one-result --partitions 1 --replication-factor 1


kafka-console-consumer.sh --bootstrap-server localhost:9092 --property print.key=true --topic t-commodity-flashsale-vote

kafka-console-consumer.sh --bootstrap-server localhost:9092 --property print.key=true --topic  t-commodity-flashsale-vote-user-item

kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer --topic t-commodity-flashsale-vote-one-result

---------------------------------------------------------------------------

Feedback rating averate rating, with state storage

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-feedback-rating-one --partitions 1 --replication-factor 1


kafka-console-consumer.sh --bootstrap-server localhost:9092 --property print.key=true --topic  t-commodity-feedback-rating-one

----------------------------------------------------------------

Inventory
Summing the records 

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-inventory --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-inventory-total-one --partitions 1 --replication-factor 1


kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --property print.key=true --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer --topic t-commodity-inventory-total-one

------------------------------------------------------------

Joining Streams 

***Scenario Joining Payment and Order Stream 

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-online-order --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-online-payment --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity-join-order-payment-one --partitions 1 --replication-factor 1

kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --property print.key=true --property print.timestamp=true --topic t-commodity-online-order
kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --property print.key=true --property print.timestamp=true --topic t-commodity-online-payment
kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --property print.key=true --property print.timestamp=true --topic t-commodity-join-order-payment-one


